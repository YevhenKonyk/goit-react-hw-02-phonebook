{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactFilter/ContactFilter.module.css","components/Section/Section.module.css","components/ContactFilter/ContactFilter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/App/App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","searchInputId","uuid","v4","ContactFilter","value","onChangeFilter","className","styles","search","htmlFor","label","type","name","placeholder","onChange","id","input","required","Contact","item","onDelete","task","itemText","phone","actions","onClick","ContactList","items","onDeleteContact","length","container","title","list","map","key","listItem","Section","children","section","ContactForm","state","nameInputId","phoneInputId","handleSubmit","e","preventDefault","onAddContact","props","reset","handleInputChange","target","setState","this","onSubmit","form","pattern","submitBtn","disabled","Component","App","contacts","filter","isContactInList","contact","i","toLowerCase","addContact","alert","newContact","prevState","deleteContact","filteredContacts","includes","filterContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f1d1d66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3KIZw\",\"title\":\"ContactForm_title__3TNMn\",\"label\":\"ContactForm_label__16weh\",\"input\":\"ContactForm_input__oTYN9\",\"submitBtn\":\"ContactForm_submitBtn__3Yjgt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__1SPMA\",\"input\":\"ContactFilter_input__1py0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3S4ph\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styles from './ContactFilter.module.css';\n\nconst searchInputId = uuid.v4();\n\nconst ContactFilter = ({ value, onChangeFilter }) => (\n  <div className={styles.search}>\n    <label htmlFor={searchInputId} className={styles.label}>\n      Search by name\n    </label>\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      placeholder=\"Enter contact name\"\n      onChange={onChangeFilter}\n      id={searchInputId}\n      className={styles.input}\n      required\n    />\n  </div>\n);\n\nContactFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default ContactFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contact.module.css';\n\nconst Contact = ({ item, onDelete }) => (\n  <div className={styles.task}>\n    <p className={styles.itemText}>{item.name}</p>\n    <p className={styles.itemText}>{item.phone}</p>\n    <div className={styles.actions}>\n      <button type=\"button\" onClick={onDelete}>\n        Remove\n      </button>\n    </div>\n  </div>\n);\n\nContact.propTypes = {\n  item: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport Contact from '../Contact/Contact';\n\nconst ContactList = ({ items, onDeleteContact }) =>\n  items.length > 0 && (\n    <div className={styles.container}>\n      <h2 className={styles.title}>Contacts</h2>\n      <ul className={styles.list}>\n        {items.map(item => (\n          <li key={item.id} className={styles.listItem}>\n            <Contact item={item} onDelete={() => onDeleteContact(item.id)} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ children }) => (\n  <section className={styles.section}>{children}</section>\n);\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'uuid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = { name: '', phone: '' };\n\n  nameInputId = uuid.v4();\n\n  phoneInputId = uuid.v4();\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    const { onAddContact } = this.props;\n\n    onAddContact({ name, phone });\n    this.reset();\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset() {\n    this.setState({ name: '', phone: '' });\n  }\n\n  render() {\n    const { name, phone } = this.state;\n\n    return (\n      <>\n        <h2 className={styles.title}>Phonebook</h2>\n        <form\n          name=\"phonebook\"\n          onSubmit={this.handleSubmit}\n          className={styles.form}\n        >\n          <label htmlFor={this.nameInputId} className={styles.label}>\n            Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            id={this.nameInputId}\n            className={styles.input}\n            required\n          />\n          <label htmlFor={this.phoneInputId} className={styles.label}>\n            Phone (format: xxx-xx-xx)\n          </label>\n          <input\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            placeholder=\"xxx-xx-xx\"\n            required\n            name=\"phone\"\n            value={phone}\n            onChange={this.handleInputChange}\n            id={this.phoneInputId}\n            className={styles.input}\n          />\n          <button\n            type=\"submit\"\n            title=\"Add contact\"\n            className={styles.submitBtn}\n            disabled=\"\"\n          >\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = { onAddContact: PropTypes.func.isRequired };\n\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport ContactFilter from '../ContactFilter/ContactFilter';\nimport ContactList from '../ContactList/ContactList';\nimport Section from '../Section/Section';\nimport ContactForm from '../ContactForm/ContactForm';\n\nconst filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Scorpion', phone: '222-33-55' },\n      { id: 'id-2', name: 'Sub Zero', phone: '555-88-77' },\n      { id: 'id-3', name: 'Syrex', phone: '444-88-99' },\n      { id: 'id-4', name: 'Sector', phone: '888-22-44' },\n    ],\n    filter: '',\n  };\n\n  isContactInList = (contact, contacts) => {\n    let isContactInList = false;\n\n    for (let i = 0; i < contacts.length; i += 1) {\n      const element = contacts[i];\n\n      if (element.name.toLowerCase() === contact.name.toLowerCase()) {\n        isContactInList = true;\n        break;\n      }\n    }\n\n    return isContactInList;\n  };\n\n  addContact = contact => {\n    const { contacts } = this.state;\n    if (!this.isContactInList(contact, contacts)) {\n      const newContact = {\n        ...contact,\n        id: uuid.v4(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact],\n      }));\n    } else {\n      alert(`The contact ${contact.name} is already in list`);\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <>\n        <Section>\n          <ContactForm onAddContact={this.addContact} />\n        </Section>\n\n        <Section>\n          <ContactFilter\n            value={filter}\n            onChangeFilter={this.handleInputChange}\n          />\n        </Section>\n\n        <Section>\n          <ContactList\n            items={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3CklG\",\"list\":\"ContactList_list__3Um4W\",\"listItem\":\"ContactList_listItem__3PQMD\"};"],"sourceRoot":""}